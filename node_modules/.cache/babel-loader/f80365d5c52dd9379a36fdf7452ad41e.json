{"ast":null,"code":"var _jsxFileName = \"/media/anislours/3AB27C22B27BE135/workspace/logique-redux-revision-react/src/components/TodoFooter/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoFooterLink from '../TodoFooterLink';\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../../constants/TodoFilters';\nconst FILTER_TITLES = {\n  [SHOW_ALL]: 'Toutes',\n  [SHOW_ACTIVE]: 'En cours',\n  [SHOW_COMPLETED]: 'Terminés'\n};\n\nconst Footer = props => {\n  // Créez votre constante permettant de récupère tous nos props via le `destructuring assigment`.\n  const {\n    completedCount,\n    activeCount,\n    currentFilter,\n    onChangeFilter,\n    onClearCompleted\n  } = props; // Créez votre constante `itemWord` permettant d'afficher les tâches restantes.\n\n  const itemWord = activeCount > 1 ? \"tâches restantes\" : \"tâche restante\";\n  return /*#__PURE__*/React.createElement(\"footer\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"todo-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, activeCount || 'Aucune'), \" \", itemWord), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, Object.keys(FILTER_TITLES).map(filter => /*#__PURE__*/React.createElement(\"li\", {\n    key: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TodoFooterLink, {\n    active: currentFilter === filter,\n    onChangeFilter: onChangeFilter,\n    filter: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, FILTER_TITLES[filter])))), !!completedCount && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"clear-completed\",\n    onClick: onClearCompleted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Effacer les termin\\xE9s\"));\n}; // Codez le propTypes du footer ici.\n\n\nFooter.propTypes = {\n  completedCount: PropTypes.number.isRequired,\n  activeCount: PropTypes.number.isRequired,\n  currentFilter: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n  onClearCompleted: PropTypes.func.isRequired\n};\nexport default Footer;","map":{"version":3,"sources":["/media/anislours/3AB27C22B27BE135/workspace/logique-redux-revision-react/src/components/TodoFooter/index.js"],"names":["React","PropTypes","TodoFooterLink","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","FILTER_TITLES","Footer","props","completedCount","activeCount","currentFilter","onChangeFilter","onClearCompleted","itemWord","Object","keys","map","filter","propTypes","number","isRequired","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,WAAnC,QAAsD,6BAAtD;AAEA,MAAMC,aAAa,GAAG;AACrB,GAACH,QAAD,GAAY,QADS;AAErB,GAACE,WAAD,GAAe,UAFM;AAGrB,GAACD,cAAD,GAAkB;AAHG,CAAtB;;AAMA,MAAMG,MAAM,GAAIC,KAAD,IAAW;AACzB;AACA,QAAM;AAACC,IAAAA,cAAD;AAAiBC,IAAAA,WAAjB;AAA8BC,IAAAA,aAA9B;AAA6CC,IAAAA,cAA7C;AAA6DC,IAAAA;AAA7D,MAAiFL,KAAvF,CAFyB,CAIzB;;AAEA,QAAMM,QAAQ,GAAGJ,WAAW,GAAE,CAAb,GAAiB,kBAAjB,GAAsC,gBAAvD;AACA,sBACC;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,WAAW,IAAI,QADjB,CADD,OAGYI,QAHZ,CADD,eAMC;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEC,MAAM,CAACC,IAAP,CAAYV,aAAZ,EAA2BW,GAA3B,CAAgCC,MAAD,iBAE7B;AAAI,IAAA,GAAG,EAAEA,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,cAAD;AACC,IAAA,MAAM,EAAEP,aAAa,KAAKO,MAD3B;AAEC,IAAA,cAAc,EAAEN,cAFjB;AAGC,IAAA,MAAM,EAAEM,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGZ,aAAa,CAACY,MAAD,CALhB,CADD,CAFF,CAFF,CAND,EAuBE,CAAC,CAACT,cAAF,iBACI;AACF,IAAA,IAAI,EAAC,QADH;AAEF,IAAA,SAAS,EAAC,iBAFR;AAGF,IAAA,OAAO,EAAEI,gBAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAxBN,CADD;AAiCA,CAxCD,C,CA0CA;;;AAEAN,MAAM,CAACY,SAAP,GAAmB;AAClBV,EAAAA,cAAc,EAAER,SAAS,CAACmB,MAAV,CAAiBC,UADf;AAElBX,EAAAA,WAAW,EAAET,SAAS,CAACmB,MAAV,CAAiBC,UAFZ;AAGlBV,EAAAA,aAAa,EAAEV,SAAS,CAACqB,MAAV,CAAiBD,UAHd;AAIlBT,EAAAA,cAAc,EAAEX,SAAS,CAACsB,IAAV,CAAeF,UAJb;AAKlBR,EAAAA,gBAAgB,EAAEZ,SAAS,CAACsB,IAAV,CAAeF;AALf,CAAnB;AAQA,eAAed,MAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport TodoFooterLink from '../TodoFooterLink'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../../constants/TodoFilters'\n\nconst FILTER_TITLES = {\n\t[SHOW_ALL]: 'Toutes',\n\t[SHOW_ACTIVE]: 'En cours',\n\t[SHOW_COMPLETED]: 'Terminés',\n}\n\nconst Footer = (props) => {\n\t// Créez votre constante permettant de récupère tous nos props via le `destructuring assigment`.\n\tconst {completedCount, activeCount, currentFilter, onChangeFilter, onClearCompleted} = props;\n\n\t// Créez votre constante `itemWord` permettant d'afficher les tâches restantes.\n\n\tconst itemWord = activeCount >1 ? \"tâches restantes\" : \"tâche restante\"\n\treturn (\n\t\t<footer className=\"footer\">\n\t\t\t<span className=\"todo-count\">\n\t\t\t\t<strong>\n\t\t\t\t\t{activeCount || 'Aucune'}\n\t\t\t\t</strong> {itemWord}\n\t\t\t</span>\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{\n\t\t\t\t\tObject.keys(FILTER_TITLES).map((filter) =>\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t<li key={filter}>\n\t\t\t\t\t\t\t\t<TodoFooterLink\n\t\t\t\t\t\t\t\t\tactive={currentFilter === filter}\n\t\t\t\t\t\t\t\t\tonChangeFilter={onChangeFilter}\n\t\t\t\t\t\t\t\t\tfilter={filter}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ FILTER_TITLES[filter] }\n\t\t\t\t\t\t\t\t</TodoFooterLink>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</ul>\n\t\t\t{\n\t\t\t\t!!completedCount\n\t\t\t\t\t&& <button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"clear-completed\"\n\t\t\t\t\t\tonClick={onClearCompleted}\n\t\t\t\t\t>Effacer les terminés</button>\n\t\t\t}\n\t\t</footer>\n\t)\n}\n\n// Codez le propTypes du footer ici.\n\nFooter.propTypes = {\n\tcompletedCount: PropTypes.number.isRequired,\n\tactiveCount: PropTypes.number.isRequired,\n\tcurrentFilter: PropTypes.string.isRequired,\n\tonChangeFilter: PropTypes.func.isRequired,\n\tonClearCompleted: PropTypes.func.isRequired,\n}\n\nexport default Footer\n"]},"metadata":{},"sourceType":"module"}