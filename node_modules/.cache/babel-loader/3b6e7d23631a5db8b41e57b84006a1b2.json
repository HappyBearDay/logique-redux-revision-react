{"ast":null,"code":"var _jsxFileName = \"/media/anislours/3AB27C22B27BE135/workspace/logique-redux-revision-react/src/containers/App/index.js\";\nimport React, { Component } from 'react';\nimport Header from '../Header';\nimport MainSection from '../MainSection';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddTodo = todoText => {\n      this.setState(prevState => {\n        return {\n          todos: [...prevState.todos, {\n            id: prevState.todos.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n            completed: false,\n            text: todoText\n          }]\n        };\n      });\n      this.updateState();\n    };\n\n    this.handleDeleteTodo = todoId => {\n      this.setState(prevState => {\n        return {\n          todos: prevState.todos.filter(todo => todo.id !== todoId)\n        };\n      });\n      this.updateState();\n    };\n\n    this.handleEditTodo = (todoId, todoText) => {\n      this.setState(prevState => {\n        return {\n          todos: prevState.todos.map(todo => {\n            return todo.id === todoId ? { ...todo,\n              text: todoText\n            } : todo;\n          })\n        };\n      });\n      this.updateState();\n    };\n\n    this.handleCompleteTodo = todoId => {\n      this.setState(prevState => {\n        return {\n          todos: prevState.todos.map(todo => {\n            return todo.id === todoId ? { ...todo,\n              completed: !todo.completed\n            } : todo;\n          })\n        };\n      });\n      this.updateState();\n    };\n\n    this.handleCompleteAllTodos = () => {\n      const areAllMarked = this.state.todos.every(todo => todo.completed);\n      this.setState(prevState => {\n        return {\n          todos: prevState.todos.map(todo => ({ ...todo,\n            completed: !areAllMarked\n          }))\n        };\n      });\n      this.updateState();\n    };\n\n    this.handleClearCompletedTodos = () => {\n      this.setState(prevState => {\n        return {\n          todos: prevState.todos.filter(todo => todo.completed === false)\n        };\n      });\n      this.updateState();\n    };\n\n    this.state = {\n      todos: [{\n        text: 'Apprendre Redux',\n        completed: false,\n        id: 0\n      }, {\n        text: 'Intégrer l\\'API dans le projet Redux',\n        completed: false,\n        id: 1\n      }],\n      todosCount: 0,\n      completedCount: 0\n    };\n  }\n\n  componentDidMount() {\n    this.updateState();\n  }\n\n  updateState() {\n    this.setState(prevState => {\n      return {\n        todosCount: prevState.todos.length,\n        completedCount: prevState.todos.reduce((count, todo) => todo.completed ? count + 1 : count, 0)\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      onAddTodo: this.handleAddTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(MainSection, {\n      todos: this.state.todos,\n      todosCount: this.state.todosCount,\n      completedCount: this.state.completedCount,\n      onCompleteAllTodos: this.handleCompleteAllTodos,\n      onEditTodo: this.handleEditTodo,\n      onDeleteTodo: this.handleDeleteTodo,\n      onCompleteTodo: this.handleCompleteTodo,\n      onClearCompleted: this.handleClearCompletedTodos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/media/anislours/3AB27C22B27BE135/workspace/logique-redux-revision-react/src/containers/App/index.js"],"names":["React","Component","Header","MainSection","App","constructor","props","handleAddTodo","todoText","setState","prevState","todos","id","reduce","maxId","todo","Math","max","completed","text","updateState","handleDeleteTodo","todoId","filter","handleEditTodo","map","handleCompleteTodo","handleCompleteAllTodos","areAllMarked","state","every","handleClearCompletedTodos","todosCount","completedCount","componentDidMount","length","count","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport Header from '../Header'\nimport MainSection from '../MainSection'\n\nexport default class App extends Component {\n\tconstructor (props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\ttodos: [\n\t\t\t\t{\n\t\t\t\t\ttext: 'Apprendre Redux',\n\t\t\t\t\tcompleted: false,\n\t\t\t\t\tid: 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttext: 'Intégrer l\\'API dans le projet Redux',\n\t\t\t\t\tcompleted: false,\n\t\t\t\t\tid: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t\ttodosCount: 0,\n\t\t\tcompletedCount: 0,\n\t\t}\n\t}\n\n\tcomponentDidMount () {\n\t\tthis.updateState()\n\t}\n\n\tupdateState () {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\ttodosCount: prevState.todos.length,\n\t\t\t\tcompletedCount: prevState.todos.reduce(\n\t\t\t\t\t(count, todo) =>\n\t\t\t\t\t\t(todo.completed ? count + 1 : count),\n\t\t\t\t\t0,\n\t\t\t\t),\n\t\t\t}\n\t\t})\n\t}\n\n\thandleAddTodo = (todoText) => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\ttodos: [\n\t\t\t\t\t...prevState.todos,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: prevState.todos.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n\t\t\t\t\t\tcompleted: false,\n\t\t\t\t\t\ttext: todoText,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\t})\n\n\t\tthis.updateState()\n\t}\n\n\thandleDeleteTodo = (todoId) => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\ttodos: prevState.todos.filter((todo) => todo.id !== todoId),\n\t\t\t}\n\t\t})\n\n\t\tthis.updateState()\n\t}\n\n\thandleEditTodo = (todoId, todoText) => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\ttodos: prevState.todos.map((todo) => {\n\t\t\t\t\treturn todo.id === todoId ? {\n\t\t\t\t\t\t...todo,\n\t\t\t\t\t\ttext: todoText,\n\t\t\t\t\t} : todo\n\t\t\t\t}),\n\t\t\t}\n\t\t})\n\n\t\tthis.updateState()\n\t}\n\n\thandleCompleteTodo = (todoId) => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\ttodos: prevState.todos.map((todo) => {\n\t\t\t\t\treturn todo.id === todoId ? {\n\t\t\t\t\t\t...todo,\n\t\t\t\t\t\tcompleted: !todo.completed,\n\t\t\t\t\t} : todo\n\t\t\t\t}),\n\t\t\t}\n\t\t})\n\n\t\tthis.updateState()\n\t}\n\n\thandleCompleteAllTodos = () => {\n\t\tconst areAllMarked = this.state.todos.every((todo) => todo.completed)\n\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\ttodos: prevState.todos.map((todo) => ({\n\t\t\t\t\t...todo,\n\t\t\t\t\tcompleted: !areAllMarked,\n\t\t\t\t})),\n\t\t\t}\n\t\t})\n\n\t\tthis.updateState()\n\t}\n\n\thandleClearCompletedTodos = () => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\ttodos: prevState.todos.filter((todo) => todo.completed === false),\n\t\t\t}\n\t\t})\n\n\t\tthis.updateState()\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header\n\t\t\t\t\tonAddTodo={this.handleAddTodo}\n\t\t\t\t/>\n\t\t\t\t<MainSection\n\t\t\t\t\ttodos={this.state.todos}\n\t\t\t\t\ttodosCount={this.state.todosCount}\n\t\t\t\t\tcompletedCount={this.state.completedCount}\n\t\t\t\t\tonCompleteAllTodos={this.handleCompleteAllTodos}\n\t\t\t\t\tonEditTodo={this.handleEditTodo}\n\t\t\t\t\tonDeleteTodo={this.handleDeleteTodo}\n\t\t\t\t\tonCompleteTodo={this.handleCompleteTodo}\n\t\t\t\t\tonClearCompleted={this.handleClearCompletedTodos}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}